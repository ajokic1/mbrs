<<<<<<< HEAD
<?xml version="1.0" encoding="UTF-8" ?>
<springplugin.generator.options.ProjectOptions>
    <path>/C:/TEMP/generator</path>
    <applicationConfiguration>
        <applicationName>aplikacija</applicationName>
        <applicationPackage>test.generator.aplikacija</applicationPackage>
    </applicationConfiguration>
    <typeMappings>
    </typeMappings>
    <generatorOptions>
        <entry>
            <string>BaseControllerGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>BaseController</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>Base{entity}Controller.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.controllers</filePackage>
                <generatorClassName>BaseControllerGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>ServiceGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>Service</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>{entity}Service.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.services</filePackage>
                <generatorClassName>ServiceGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>ConverterGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>Converter</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>{entity}Converter.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.services</filePackage>
                <generatorClassName>ConverterGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>ConverterGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>BaseRepository</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>Base{entity}Repository.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.services</filePackage>
                <generatorClassName>BaseRepositoryGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>BaseServiceGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>BaseService</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>Base{entity}Service.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.services</filePackage>
                <generatorClassName>BaseServiceGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>DtoGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>Dto</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>{entity}Dto.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.dtos</filePackage>
                <generatorClassName>DtoGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>ModelGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>Model</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>{entity}.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.models</filePackage>
                <generatorClassName>ModelGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
    </generatorOptions>
</springplugin.generator.options.ProjectOptions>
=======
<?xml version="1.0" encoding="UTF-8" ?>
<springplugin.generator.options.ProjectOptions>
    <path>/C:/TEMP/generator</path>
    <applicationConfiguration>
        <applicationName>aplikacija</applicationName>
        <applicationPackage>test.generator.aplikacija</applicationPackage>
        <serverPort>8080</serverPort>
        <databaseName>aplikacija_db</databaseName>
        <databaseUsername>root</databaseUsername>
        <databasePassword>root</databasePassword>
        <databaseHost>localhost</databaseHost>
        <databasePort>3306</databasePort>
    </applicationConfiguration>
    <typeMappings>
    </typeMappings>
    <generatorOptions>
        <entry>
            <string>BaseControllerGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>BaseController</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>Base{entity}Controller.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.controllers</filePackage>
                <generatorClassName>BaseControllerGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>ServiceGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>Service</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>{entity}Service.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.services</filePackage>
                <generatorClassName>ServiceGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>ConverterGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>Converter</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>{entity}Converter.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.services</filePackage>
                <generatorClassName>ConverterGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>BaseRepositoryGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>BaseRepository</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>Base{entity}Repository.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.services</filePackage>
                <generatorClassName>BaseRepositoryGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
        <entry>
            <string>BaseServiceGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/src/{app_package}</outputPath>
                <templateName>BaseService</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>Base{entity}Service.java</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.services</filePackage>
                <generatorClassName>BaseServiceGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
         <entry>
            <string>ApplicationYmlGenerator</string>
            <springplugin.generator.options.GeneratorOptions>
                <outputPath>{path}/{app_name}/resources</outputPath>
                <templateName>applicationyml</templateName>
                <templateDir>templates</templateDir>
                <outputFileName>application.yml</outputFileName>
                <overwrite>true</overwrite>
                <filePackage>generated.services</filePackage>
                <generatorClassName>ApplicationYmlGenerator</generatorClassName>
            </springplugin.generator.options.GeneratorOptions>
        </entry>
    </generatorOptions>
</springplugin.generator.options.ProjectOptions>
>>>>>>> branch 'master' of https://github.com/ajokic1/mbrs.git
